// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    combos {
        compatible = "zmk,combos";
        combo_ff_tab {
            timeout-ms = <50>;
            key-positions = <13 23>;
            bindings = <&kp C>;
            layers = <0 1 2>;
        };
        combo_left_space {
            timeout-ms = <20>;
            key-positions = <12 13>;
            bindings = <&kp SPACE>;
            layers = <0 1 2>;
        };
        combo_right_space {
            timeout-ms = <20>;
            key-positions = <16 17>;
            bindings = <&kp RET>;
            layers = <0 1 2>;
        };
        combo_z {
            timeout-ms = <70>;
            key-positions = <25 26>;
            bindings = <&kp Z>;
            layers = <0 1 2>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp ESC>;
            layers = <0 1 2>;
        };
         combo_sk_alt {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&sk LALT>;
            layers = <0 1 2>;
        };
         combo_iterm {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LC(BSLH)>;
            layers = <0 1 2>;
        };
         combo_sk_ctrl {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&sk LCTRL>;
            layers = <0 1 2>;
        };
        
         combo_backslash {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp BSLH>;
            layers = <0 1 2>;
        };
         combo_backspace {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp BACKSPACE>;
            layers = <0 1 2>;
        };
        
            combo_repeat {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&key_repeat>;
            layers = <0 1 2>;
        };
         combo_sk_lgui {
            timeout-ms = <100>;
            key-positions = <2 12>;
            bindings = <&sk LGUI>;
            layers = <0 1 2>;
        };
         combo_sk_rgui {
            timeout-ms = <100>;
            key-positions = <7 17>;
            bindings = <&sk RGUI>;
            layers = <0 1 2>;
        };
        
            combo_tab {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp TAB>;
            layers = <0 1 2>;
        };
        
            combo_colon {
            timeout-ms = <100>;
            key-positions = <17 27>;
            bindings = <&kp COLON>;
            layers = <0 1 2>;
        };
            combo_alt_instant {
            timeout-ms = <70>;
            key-positions = <1 11>;
            bindings = <&kp LALT>;
            layers = <0>;
        };

            combo_ctl_instant {
            timeout-ms = <70>;
            key-positions = <11 21>;
            bindings = <&kp LCTRL>;
            layers = <0>;
        };
        
        
           combo_meh_layer {
            timeout-ms = <50>;
            key-positions = <3 13>;
            bindings = <&sl 7>;
            layers = <0 1 2>;
        };
           combo_copy {
            timeout-ms = <120>;
            key-positions = <21 23>;
            bindings = <&kp LG(C)>;
            layers = <0 1 2>;
        };
           combo_alfred {
            timeout-ms = <50>;
            key-positions = <6 16>;
            bindings = <&kp LA(SPACE)>;
            layers = <0 1 2>;
        };
           combo_paste {
            timeout-ms = <120>;
            key-positions = <21 22 23>;
            bindings = <&kp LG(V)>;
            layers = <0 1 2>;
        };
            combo_caps_word {
            timeout-ms = <120>;
            key-positions = <11 12 13>;
            bindings = <&caps_word>;
            layers = <0 1 2>;
        };
    };


    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
            HRML(A,        S,         D,         F)     &kp G          &kp H      HRMR(J,        K,         L,        SQT)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &lt 2 TAB   &kp ENTER     &kp SPACE  &lt 1 BSPC
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        right_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ INSERT   │  1       │  2       │  3       │          │   │ HOME     │ PAGE DN  │ PAGE UP  │ END      │  :       │
            &kp INS    &kp N1     &kp N2     &kp N3     &trans         &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp COLON
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ DELETE   │  4       │  5       │  6       │          │   │ LEFT     │ DOWN     │ UP       │ RIGHT    │  ;       │
            &kp DEL    &kp N4     &kp N5     &kp N6     &trans         &kp LARW   &kp DARW   &kp UARW   &kp RARW   &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CAPS     │  7       │  8       │  9       │  0       │   │          │          │          │          │          │
           &caps_word  &kp N7     &kp N8     &kp N9     &kp N0         &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &kp ESC        &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        left_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │  [       │  {       │  }       │          │   │  ^       │  (       │  )       │  ]       │  ~       │
            &trans     &kp LBKT   &kp LBRC   &kp RBRC   &trans         &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT   &kp TILDE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  !       │  @       │  #       │  $       │  %       │   │  *       │  -       │  =       │  \       │  `       │
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH   &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │  &       │  _       │  +       │  │       │          │
            &trans     &trans     &trans     &trans     &trans         &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE   &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        tri_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │PROFILE 0 │   │          │          │          │          │  RESET   │
           &sys_reset  &trans     &trans     &trans    &bt BT_SEL 0    &trans     &trans     &trans     &trans    &sys_reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │          │          │          │          │BOOTLOADER│
          &bootloader  &trans     &trans     &trans    &bt BT_SEL 1    &trans     &trans     &trans     &trans    &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │ CLEAR BT │PROFILE 2 │   │          │          │          │          │          │
            &trans     &trans     &trans    &bt BT_CLR &bt BT_SEL 2    &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};